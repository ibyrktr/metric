<!-- Copyright 2018 Ismail Bayraktar Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>metricconsumer</artifactId>
	<name>metricconsumer</name>
	<parent>
		<groupId>eu.dipherential</groupId>
		<artifactId>metricparent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.6</version>
		</dependency>
		<dependency>
			<groupId>com.datastax.spark</groupId>
			<artifactId>spark-cassandra-connector_2.11</artifactId>
			<version>2.0.6</version>
		</dependency>
		<dependency>
			<groupId>com.datastax.spark</groupId>
			<artifactId>spark-cassandra-connector-java_2.11</artifactId>
			<version>1.5.2</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.commons</groupId>
					<artifactId>commons-lang3</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.datastax.cassandra</groupId>
			<artifactId>cassandra-driver-core</artifactId>
			<version>3.4.0</version>
		</dependency>
		<!-- Kafka -->
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>1.0.0</version>
		</dependency>
		<!-- Spark -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_2.11</artifactId>
			<version>2.2.1</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.apache.commons</groupId>
					<artifactId>commons-lang3</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_2.11</artifactId>
			<version>2.2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming-kafka-0-10_2.11</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql-kafka-0-10_2.11</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.10.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.10.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.10.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<transformers>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<mainClass>nl.bayraktar.metricconsumer.stream.MetricEventConsumer</mainClass>
						</transformer>
					</transformers>
					<finalName>uber-${project.artifactId}-${project.version}</finalName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.20.1</version>
				<configuration>
					<images>
						<!-- Cassandra image -->
						<image>
							<name>bayraktar/metriccassandra</name>
							<alias>bayraktar-metriccassandra</alias>
							<build>
								<from>bayraktar/cassandra:latest</from>
								<tags>
									<tag>${project.version}</tag>
									<tag>latest</tag>
								</tags>
								<assembly>
									<targetDir>/etc/cassandra</targetDir>
									<inline
										xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
										xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 
							http://maven.apache.org/xsd/assembly-1.1.2.xsd">
										<files>
											<file>
												<source>src/main/resources/setup.cql</source>
												<outputDirectory>/</outputDirectory>
											</file>
										</files>
									</inline>
								</assembly>
							</build>
							<run>
								<namingStrategy>alias</namingStrategy>
								<hostname>bayraktar-metriccassandra</hostname>
								<env>
									<CASSANDRA_BROADCAST_ADDRESS>192.168.99.100</CASSANDRA_BROADCAST_ADDRESS>
								</env>
								<ports>
									<port>7000:7000</port>
									<port>7001:7001</port>
									<port>7199:7199</port>
									<port>9042:9042</port>
									<port>9160:9160</port>
								</ports>
								<log>
									<enabled>true</enabled>
									<color>red</color>
									<driver>
										<name>json-file</name>
										<opts>
											<max-size>10m</max-size>
											<max-file>5</max-file>
										</opts>
									</driver>
								</log>
							</run>
						</image>
						<image>
							<name>bayraktar/metrickafka</name>
							<alias>bayraktar-metrickafka</alias>
							<build>
								<from>spotify/kafka</from>
								<tags>
									<tag>${project.version}</tag>
									<tag>latest</tag>
								</tags>
								<ports>
									<port>2181</port>
									<port>9092</port>
								</ports>
							</build>
							<run>
								<namingStrategy>alias</namingStrategy>
								<hostname>bayraktar-metrickafka</hostname>
								<env>
									<ADVERTISED_PORT>9092</ADVERTISED_PORT>
									<ADVERTISED_HOST>bayraktar-metrickafka</ADVERTISED_HOST>
									<AUTO_CREATE_TOPICS>true</AUTO_CREATE_TOPICS>
									<NUM_PARTITIONS>3</NUM_PARTITIONS>
								</env>
								<ports>
									<port>2181:2181</port>
									<port>9092:9092</port>
								</ports>
								<log>
									<enabled>true</enabled>
									<color>red</color>
									<driver>
										<name>json-file</name>
										<opts>
											<max-size>10m</max-size>
											<max-file>5</max-file>
										</opts>
									</driver>
								</log>
							</run>
						</image>
						<!-- Spark application image -->
						<image>
							<name>bayraktar/metricspark</name>
							<alias>bayraktar-metricspark</alias>
							<build>
								<cleanup>true</cleanup>
								<from>bayraktar/spark</from>
								<tags>
									<tag>latest</tag>
									<tag>${project.version}</tag>
								</tags>
								<assembly>
									<basedir>/opt/apache-spark/jars/app</basedir>
									<inline
										xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
										xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 
							http://maven.apache.org/xsd/assembly-1.1.2.xsd">
										<files>
											<file>
												<source>${project.build.directory}/uber-${project.artifactId}-${project.version}.jar</source>
												<outputDirectory>/</outputDirectory>
												<destName>spark-app.jar</destName>
											</file>
										</files>
									</inline>
								</assembly>
								<cmd>
									<exec>
										<arg>supervisord</arg>
										<arg>-n</arg>
									</exec>
								</cmd>
							</build>
							<run>
								<namingStrategy>alias</namingStrategy>
								<env>
									<SPARK_VERSION>2.2.1</SPARK_VERSION>
									<HADOOP_VERSION>2.7</HADOOP_VERSION>
									<CASSANDRA_HOST>bayraktar-metriccassandra</CASSANDRA_HOST>
									<KAFKA_SERVERS>bayraktar-metrickafka:9092</KAFKA_SERVERS>
									<SPARK_MASTER_HOST>localhost</SPARK_MASTER_HOST>
									<SPARK_MASTER_PORT>7077</SPARK_MASTER_PORT>
									<SPARK_APPLICATION_JARS_LOC>/opt/apache-spark/jars/app</SPARK_APPLICATION_JARS_LOC>
									<SPARK_APPLICATION_JAR>spark-app.jar</SPARK_APPLICATION_JAR>
									<SPARK_APPLICATION_MAIN_CLASS>eu.dipherential.metricconsumer.stream.MetricEventConsumer</SPARK_APPLICATION_MAIN_CLASS>
								</env>
								<links>
									<link>bayraktar-metriccassandra:bayraktar-metriccassandra</link>
									<link>bayraktar-metrickafka:bayraktar-metrickafka</link>
								</links>
								<ports>
									<port>4040:4040</port>
									<port>8088:8088</port>
									<port>8089:8089</port>
								</ports>
								<log>
									<enabled>true</enabled>
									<color>red</color>
									<driver>
										<name>json-file</name>
										<opts>
											<max-size>10m</max-size>
											<max-file>5</max-file>
										</opts>
									</driver>
								</log>
								<wait>
									<time>60000</time>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
