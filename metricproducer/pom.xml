<!-- Copyright 2018 Ismail Bayraktar Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>metricproducer</artifactId>
	<name>metricproducer</name>
    <parent>
        <groupId>eu.dipherential</groupId>
        <artifactId>metricparent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.beust</groupId>
			<artifactId>jcommander</artifactId>
			<version>1.72</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.10.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.10.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.10.0</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<!-- Maven Assembly Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<finalName>${project.artifactId}-${project.version}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>eu.dipherential.metricproducer.Run</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.20.1</version>
				<configuration>
					<images>
						<image>
							<name>bayraktar/metricproducer</name>
							<alias>bayraktar-metricproducer1</alias>
							<build>
								<cleanup>true</cleanup>
								<from>java:8</from>
								<workdir>/opt/tools</workdir>
								<tags>
									<tag>${project.version}</tag>
									<tag>latest</tag>
								</tags>
								<assembly>
									<basedir>/opt/tools</basedir>
									<inline
										xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
										xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
										<id>metricproducer</id>
										<files>
											<file>
												<source>${project.build.directory}/${project.artifactId}-${project.version}.jar</source>
												<outputDirectory>./</outputDirectory>
												<destName>${project.artifactId}.jar</destName>
											</file>
										</files>
									</inline>
								</assembly>
								<entryPoint>
									<shell>java -jar ${project.artifactId}.jar -group 1 -id 1 -type THERM -kafkaHost bayraktar-metrickafka:9092</shell>
								</entryPoint>
							</build>
							<run>
								<namingStrategy>alias</namingStrategy>
								<entrypoint>
									<shell>java -jar ${project.artifactId}.jar -group home1 -id room1 -type THERM -kafkaHost bayraktar-metrickafka:9092</shell>
								</entrypoint>
								<links>
									<link>bayraktar-metrickafka:bayraktar-metrickafka</link>
								</links>
								<log>
									<enabled>true</enabled>
									<color>red</color>
									<driver>
										<name>json-file</name>
										<opts>
											<max-size>10m</max-size>
											<max-file>5</max-file>
										</opts>
									</driver>
								</log>
							</run>
						</image>
						<image>
							<name>bayraktar/metricproducer</name>
							<alias>bayraktar-metricproducer2</alias>
							<run>
								<namingStrategy>alias</namingStrategy>
								<entrypoint>
									<shell>java -jar ${project.artifactId}.jar -group home1 -id room2 -type THERM -kafkaHost bayraktar-metrickafka:9092</shell>
								</entrypoint>
								<links>
									<link>bayraktar-metrickafka:bayraktar-metrickafka</link>
								</links>
								<log>
									<enabled>true</enabled>
									<color>red</color>
									<driver>
										<name>json-file</name>
										<opts>
											<max-size>10m</max-size>
											<max-file>5</max-file>
										</opts>
									</driver>
								</log>
							</run>
						</image>
						<image>
							<name>bayraktar/metricproducer</name>
							<alias>bayraktar-metricproducer3</alias>
							<run>
								<namingStrategy>alias</namingStrategy>
								<entrypoint>
									<shell>java -jar ${project.artifactId}.jar -group home1 -id room3 -type THERM -kafkaHost bayraktar-metrickafka:9092</shell>
								</entrypoint>
								<links>
									<link>bayraktar-metrickafka:bayraktar-metrickafka</link>
								</links>
								<wait>
									<time>60000</time>
								</wait>
								<log>
									<enabled>true</enabled>
									<color>red</color>
									<driver>
										<name>json-file</name>
										<opts>
											<max-size>10m</max-size>
											<max-file>5</max-file>
										</opts>
									</driver>
								</log>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker:build</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>clean</id>
						<phase>clean</phase>
						<goals>
							<goal>stop</goal>
							<goal>remove</goal>
						</goals>
					</execution>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>build</goal>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
					<execution>
						<id>remove</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
							<goal>remove</goal>
						</goals>
					</execution>
					<execution>
						<id>docker:push</id>
						<phase>install</phase>
						<goals>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
